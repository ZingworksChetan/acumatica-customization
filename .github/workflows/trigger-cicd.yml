name: Trigger CI/CD Pipeline

on:
  push:
    paths:
      - 'Customization/**'  # Trigger when anything inside Customization changes

jobs:
  trigger_cicd:
    runs-on: self-hosted

    steps:
      - name: Checkout Repository with Full History
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # - name: Extract New Customization Folder
      #   id: extract_folder
      #   shell: pwsh
      #   run: |
      #     $FOLDER = git diff --name-only ${{ github.event.before }} ${{ github.event.after }} | Select-String -Pattern "^Customization/([^/]+)/" | ForEach-Object { $_.Matches.Groups[1].Value } | Select-Object -Unique
      #     echo "Detected folder: $FOLDER"
      #     echo "FOLDER=$FOLDER" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8

      - name: Detect latest customization folder (with fallback)
        id: detect_folder
        shell: pwsh
        run: |
          # Try to get diff between commits
          $diffFiles = git diff --name-only ${{ github.event.before }} ${{ github.event.after }}

          if (-not $diffFiles) {
           Write-Host "⚠️ git diff is empty, using fallback to get latest commit files"
            $diffFiles = git show --name-only --pretty="" HEAD
          }

          $changedFolders = $diffFiles |
            Select-String -Pattern '^Customization/([^/]+)/' |
            ForEach-Object { $_.Matches.Groups[1].Value } |
            Sort-Object -Unique

          foreach ($folder in $changedFolders) {
            if (Test-Path "Customization/$folder") {
              Write-Host "✅ Found valid customization folder: $folder"
              echo "VERSION_NAME=$folder" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8
              exit 0
            }
          }

          Write-Host "⚠️ No valid customization folder found (all may be deleted)"
          echo "VERSION_NAME=" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8


      - name: Trigger CI/CD in `acumatica-cicd-pipeline`
        if: env.VERSION_NAME != ''
        shell: pwsh
        run: |
          $headers = @{
            "Authorization" = "token ${{ secrets.CICDTOKEN }}"
            "Accept" = "application/vnd.github.v3+json"
          }
          $body = @{
              ref = "main"
              inputs = @{ versionName = "${{ env.VERSION_NAME }}" }
          } | ConvertTo-Json -Compress

          Invoke-RestMethod -Uri "https://api.github.com/repos/ZingworksChetan/acumatica-cicd-pipeline/actions/workflows/main.yml/dispatches" `
                            -Method Post `
                            -Headers $headers `
                            -Body $body `
                            -ContentType "application/json"


      - name: Debug VERSION_NAME
        shell: pwsh
        run: |
          echo "VERSION_NAME=${{ env.VERSION_NAME }}"



      # - name: Trigger CI/CD in `acumatica-cicd-pipeline`
      #   if: env.FOLDER != ''
      #   run: |
      #     curl -X POST -H "Authorization: token ${{ secrets.CICD_REPO_PAT }}" \
      #       -H "Accept: application/vnd.github.v3+json" \
      #       https://api.github.com/repos/ZingworksChetan/acumatica-cicd-pipeline/actions/workflows/main.yml/dispatches \
      #       -d '{"ref": "main", "inputs": { "versionName": "'${{ env.FOLDER }}'" }}'
